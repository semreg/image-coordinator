{"version":3,"sources":["context/locale-context.js","components/layout/nav/Nav.jsx","components/layout/footer/Footer.jsx","components/layout/Layout.jsx","components/main/upload-form/UploadInput.jsx","components/main/upload-form/ConfirmUpload.jsx","components/other/Animated.jsx","components/main/upload-form/UploadForm.jsx","components/main/сoordinator-form/PropsForm.jsx","javascripts/draw.js","javascripts/getCoordinates.js","components/main/сoordinator-form/selectionShape/Poly.jsx","components/main/сoordinator-form/selectionShape/Rect.jsx","javascripts/getRadius.js","components/main/сoordinator-form/selectionShape/Circle.jsx","components/main/сoordinator-form/ImageCanvas.jsx","components/main/сoordinator-form/CoordinatePicker.jsx","components/main/сoordinator-form/CoordinatorForm.jsx","components/main/Main.jsx","static/locale/index.js","reducers/locale-reducer.js","context/GlobalState.jsx","components/App.jsx","serviceWorker.js","index.jsx"],"names":["createContext","currentLang","content","updateLocale","locale","Nav","_useState","useState","_useState2","Object","slicedToArray","isOpen","setIsOpen","context","useContext","LocaleContext","_context$content$cont","contents","nav","issues","sourceCode","onLangsListClick","e","value","target","localStorage","setItem","react_default","a","createElement","mdbreact_esm","color","dark","expand","className","onClick","id","navbar","left","href","rel","caret","fas","icon","langsList","map","item","index","key","short","name","right","fab","Footer","Layout","_ref","children","useEffect","getItem","Fragment","nav_Nav","footer_Footer","UploadInput","readURL","isImageDropping","setIsImageDropping","localeContext","onDragOver","onDragLeave","concat","type","onChange","accept","main","uploadForm","uploadInput","areaCap","ConfirmUpload","removeUpload","image","src","source","alt","removeBtnCap","title","Animated","springProps","useSpring","opacity","marginTop","from","web","div","style","UploadForm","setImage","confirmed","isConfirmed","note","other_Animated","upload_form_ConfirmUpload","upload_form_UploadInput","files","reader","FileReader","onload","result","readAsDataURL","buttons","goNext","PropsForm","imageSource","imageProps","setImageProps","doDisplayImage","setDoDisplayImage","loadedImage","useRef","current","width","clientWidth","height","clientHeight","selectionShape","onRadioChange","propsForm","imageSizeBlock","selectionAreaShapeBlock","visibility","ref","label","group","validate","error","success","String","htmlFor","defaultChecked","drawImage","ctx","img","drawStrokesForPoly","strokesCoords","fillStyle","strokeStyle","forEach","beginPath","arc","Math","PI","fill","stroke","drawStrokesForRect","getCoordinates","rect","getBoundingClientRect","clientX","clientY","top","Poly","coords","imageToDraw","coordsHistory","canvasProps","setCoords","setCurrentCoords","setCoordsHistory","isMousePressed","setIsMousePressed","canvasRef","canvas","getContext","clearRect","length","moveTo","element","lineTo","closePath","drawPoly","onMouseDown","toConsumableArray","onMouseUp","onMouseMove","Rect","topLeftCoords","setTopLeftCoords","_useState3","_useState4","bottomRightCoords","setBottomRightCoords","_useState5","_useState6","areCoordsReady","setAreCoordsReady","_useState7","_useState8","rectWidth","rectHeight","topLeftX","topLeftY","drawRect","getRadius","centerCoords","edgeCoords","sqrt","pow","setCenterCoords","setEdgeCoords","centerX","centerY","radius","drawCircle","ImageCanvas","formContainerProps","setCanvasProps","undo","setImageToDraw","imageRatio","newWidth","baseImage","Image","selectionShape_Poly","selectionShape_Rect","Circle","CoordinatePicker","undefined","coordsToDisplay","setCoordsToDisplay","removedCoords","setRemovedCoords","_useState9","_useState10","currentCoords","_useState11","_useState12","_useState13","_useState14","setformContainerProps","formContainer","xy","getNaturalCoords","join","round","slice","pop","currentCoordsHistory","currentProps","naturalProps","coordinatePickerForm","lastCoords","allCoords","_context$content$cont2","undoBtnCap","redoBtnCap","redo","clear","_oordinator_form_ImageCanvas","currentRemovedCoords","lastRemoved","CoordinatorForm","onCancelClick","cancel","next","edit","_oordinator_form_CoordinatePicker","_oordinator_form_PropsForm","Main","_oordinator_form_CoordinatorForm","upload_form_UploadForm","static_locale","en","ukr","ru","locale_reducer","state","action","console","log","objectSpread","localeCollection","GlobalState","_useReducer","useReducer","localeReducer","_useReducer2","localeState","dispatch","keys","locale_context","Provider","hot","props","context_GlobalState","BrowserRouter","layout_Layout","main_Main","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","ReactDOM","render","components_App","document","querySelector","URL","process","origin","addEventListener","fetch","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.714e4374.chunk.js","sourcesContent":["import { createContext } from 'react'\n\nexport default createContext({\n  currentLang: null,\n  content: {},\n  updateLocale: locale => {}\n})\n","import React, { useState, useContext } from 'react'\nimport './nav.scss'\nimport {\n  MDBNavbar,\n  MDBNavbarBrand,\n  MDBNavbarNav,\n  MDBNavItem,\n  MDBNavbarToggler,\n  MDBCollapse,\n  MDBIcon,\n  MDBDropdown,\n  MDBDropdownToggle,\n  MDBDropdownItem,\n  MDBDropdownMenu\n} from 'mdbreact'\nimport LocaleContext from '../../../context/locale-context.js'\n\nfunction Nav () {\n  const [isOpen, setIsOpen] = useState(false)\n\n  const context = useContext(LocaleContext)\n\n  const toggleCollapse = () => setIsOpen(!isOpen)\n\n  const { issues, sourceCode } = context.content.contents.nav\n\n  const onLangsListClick = e => {\n    const { value } = e.target\n\n    context.updateLocale(value)\n\n    localStorage.setItem('locale', value)\n  }\n\n  return (\n    <nav>\n      <MDBNavbar color=\"danger-color\" dark expand=\"md\">\n        <MDBNavbarBrand>\n          <strong className=\"white-text\">Image Coordinator</strong>\n        </MDBNavbarBrand>\n        <MDBNavbarToggler onClick={toggleCollapse} />\n        <MDBCollapse id=\"navbarCollapse3\" isOpen={isOpen} navbar>\n          <MDBNavbarNav left>\n            <MDBNavItem>\n              <a\n                className='nav-link'\n                href=\"https://gitlab.com/Semreg/image-coordinator/issues\"\n                target='_blank'\n                rel='noopener noreferrer'\n              >\n                {issues}\n              </a>\n            </MDBNavItem>\n            <MDBNavItem>\n              <a\n                className='nav-link'\n                href=\"https://gitlab.com/Semreg/image-coordinator/\"\n                target='_blank'\n                rel='noopener noreferrer'\n              >\n                {sourceCode}\n              </a>\n            </MDBNavItem>\n            <MDBNavItem>\n              <MDBDropdown>\n                <MDBDropdownToggle nav caret>\n                  <span className=\"mr-2\"><MDBIcon className='language-icon' fas='true' icon=\"language\" /></span>\n                </MDBDropdownToggle>\n                <MDBDropdownMenu>\n                  {/* <MDBDropdownItem>English (US)</MDBDropdownItem>\n                  <MDBDropdownItem>Ukrainian</MDBDropdownItem> */}\n                  {/* {context.} */}\n                  {context.langsList.map((item, index) => (\n                    <MDBDropdownItem\n                      key={index}\n                      onClick={onLangsListClick}\n                      value={item.short}\n                    >\n                      {item.name}\n                    </MDBDropdownItem>\n                  ))}\n                </MDBDropdownMenu>\n              </MDBDropdown>\n            </MDBNavItem>\n          </MDBNavbarNav>\n          <MDBNavbarNav right>\n            <MDBNavItem>\n              <a\n                className='nav-link waves-effect waves-light'\n                href=\"https://gitlab.com/Semreg\"\n                target='_blank'\n                rel='noopener noreferrer'\n              >\n                <MDBIcon fab icon=\"gitlab\" />\n              </a>\n            </MDBNavItem>\n            <MDBNavItem>\n              <a\n                className='nav-link waves-effect waves-light'\n                href=\"https://github.com/Semreg\"\n                target='_blank'\n                rel='noopener noreferrer'\n              >\n                <MDBIcon fab icon=\"github\" />\n              </a>\n            </MDBNavItem>\n            <MDBNavItem>\n              <a\n                className='nav-link waves-effect waves-light'\n                href=\"https://www.linkedin.com/in/vladislav-chabaniuk-792849159\"\n                target='_blank'\n                rel='noopener noreferrer'\n              >\n                <MDBIcon fab icon=\"linkedin\" />\n              </a>\n            </MDBNavItem>\n          </MDBNavbarNav>\n        </MDBCollapse>\n      </MDBNavbar>\n    </nav>\n  )\n}\n\nexport default Nav\n","import React from 'react'\nimport './footer.scss'\n\nconst Footer = () => (\n  <footer>\n  </footer>\n)\n\nexport default Footer\n","import React, { useEffect, useContext } from 'react'\nimport { element } from 'prop-types'\nimport Nav from './nav/Nav'\nimport Footer from './footer/Footer'\nimport LocaleContext from '../../context/locale-context.js'\n\nfunction Layout ({ children }) {\n  const context = useContext(LocaleContext)\n\n  useEffect(() => {\n    const locale = localStorage.getItem('locale')\n\n    if (locale) {\n      context.updateLocale(locale)\n    } else {\n      context.updateLocale('en')\n    }\n  }, [])\n\n  if (context.content.contents) {\n    return (\n      <>\n        <Nav />\n          {children}\n        <Footer />\n      </>\n    )\n  } else {\n    return ''\n  }\n}\n\nLayout.propTypes = {\n  children: element\n}\n\nexport default Layout\n","import React, { useState, useContext } from 'react'\nimport { func } from 'prop-types'\nimport localeContext from '../../../context/locale-context.js'\n\nconst propTypes = { readURL: func }\n\nfunction UploadInput ({ readURL }) {\n  const [isImageDropping, setIsImageDropping] = useState(false)\n\n  const onDragOver = () => setIsImageDropping(true)\n\n  const onDragLeave = () => setIsImageDropping(false)\n\n  const context = useContext(localeContext)\n\n  return (\n    <div\n      onDragOver={onDragOver}\n      onDragLeave={onDragLeave}\n      className={`\n        image-upload-wrap\n        ${isImageDropping ? 'image-dropping' : ''}\n      `}\n    >\n      <input\n        id='file-input'\n        className='file-upload-input'\n        type='file'\n        onChange={readURL}\n        accept='image/*'\n      />\n      <div className='drag-text'>\n        <h3>\n          <i className=\"fas fa-file-upload\"></i>\n          <p className='drag-and-drop-text'>{context.content.contents.main.uploadForm.uploadInput.areaCap}</p>\n        </h3>\n      </div>\n    </div>\n  )\n}\n\nUploadInput.propTypes = propTypes\n\nexport default UploadInput\n","import React, { useContext } from 'react'\nimport { func, object } from 'prop-types'\nimport localeContext from '../../../context/locale-context.js'\n\nconst propTypes = {\n  removeUpload: func,\n  image: object\n}\n\nfunction ConfirmUpload ({ removeUpload, image }) {\n  const context = useContext(localeContext)\n\n  return (\n    <div className='file-upload-content'>\n      <img className='file-upload-image' src={image.source} alt='your content' />\n      <div className='image-title-wrap'>\n        <button\n          type='button'\n          onClick={removeUpload}\n          className='remove-image btn btn-dark'\n        >\n          <span className='capital'><i className=\"fas fa-times\"></i> {context.content.contents.main.uploadForm.uploadInput.removeBtnCap}</span>\n          <br/>\n          <span className='image-title'>{image.title}</span>\n        </button>\n      </div>\n    </div>\n  )\n}\n\nConfirmUpload.propTypes = propTypes\n\nexport default ConfirmUpload\n","import React from 'react'\nimport { node } from 'prop-types'\nimport { useSpring, animated } from 'react-spring'\n\nconst propTypes = { children: node }\n\nfunction Animated ({ children }) {\n  const springProps = useSpring({\n    opacity: 1,\n    marginTop: 0,\n    from: {\n      opacity: 0,\n      marginTop: -20\n    }\n  })\n\n  return (\n    <animated.div style={springProps}>\n      {children}\n    </animated.div>\n  )\n}\n\nAnimated.propTypes = propTypes\n\nexport default Animated\n","import React, { useContext } from 'react'\nimport { MDBJumbotron, MDBBtn, MDBContainer, MDBRow, MDBCol } from 'mdbreact'\nimport { object, func } from 'prop-types'\n\nimport UploadInput from './UploadInput'\nimport ConfirmUpload from './ConfirmUpload'\nimport Animated from '../../other/Animated'\nimport localeContext from '../../../context/locale-context.js'\n\nconst propTypes = {\n  image: object,\n  setImage: func\n}\n\nfunction UploadForm ({ image, setImage }) {\n  const removeUpload = () => setImage({\n    title: null,\n    source: null,\n    confirmed: image.isConfirmed\n  })\n\n  const context = useContext(localeContext)\n\n  const { title, note } = context.content.contents.main.uploadForm\n\n  const readURL = e => {\n    const { files } = e.target\n\n    if (files && files[0]) {\n      const reader = new FileReader()\n\n      reader.onload = e => {\n        const { result } = e.target\n\n        setImage({\n          title: files[0].name,\n          source: result,\n          confirmed: image.isConfirmed\n        })\n      }\n\n      reader.readAsDataURL(files[0])\n    } else {\n      removeUpload()\n    }\n  }\n\n  const onClick = () => setImage({\n    title: image.title,\n    source: image.source,\n    isConfirmed: true\n  })\n\n  return (\n    <Animated>\n      <MDBContainer className='mt-5 text-center form-container'>\n        <MDBRow>\n          <MDBCol>\n            <MDBJumbotron>\n              <h2 className='h1 display-3'>{title}</h2>\n              <p>{note}</p>\n              <div className='file-upload'>\n                {!image.source\n                  ? <UploadInput readURL={readURL}/>\n                  : (\n                    <ConfirmUpload\n                      image={image}\n                      removeUpload={removeUpload}\n                    />\n                  )\n                }\n              </div>\n              <p className='lead' style={{ 'marginTop': '20px' }}>\n                <MDBBtn\n                  id='button'\n                  color='primary'\n                  className={`${!image.source ? 'disabled' : ''}`}\n                  onClick={onClick}\n                >\n                  <span className='capital'>\n                    <i className=\"fas fa-chevron-right\"></i> {context.content.contents.main.buttons.goNext}\n                  </span>\n                </MDBBtn>\n              </p>\n            </MDBJumbotron>\n          </MDBCol>\n        </MDBRow>\n      </MDBContainer>\n    </Animated>\n  )\n}\n\nUploadForm.propTypes = propTypes\n\nexport default UploadForm\n","/**\n * TODO: Find another way of getting image size without rendering it\n */\n\nimport React, { useState, useEffect, useRef, useContext } from 'react'\nimport { MDBJumbotron, MDBContainer, MDBRow, MDBCol, MDBInput } from 'mdbreact'\nimport { string, object, func, element } from 'prop-types'\nimport Animated from '../../other/Animated'\nimport localeContext from '../../../context/locale-context.js'\n\nconst propTypes = {\n  imageSource: string,\n  imageProps: object,\n  setImageProps: func,\n  children: element\n}\n\nfunction PropsForm ({ imageSource, imageProps, setImageProps, children }) {\n  const [doDisplayImage, setDoDisplayImage] = useState(true)\n\n  const loadedImage = useRef(null)\n\n  const context = useContext(localeContext)\n\n  useEffect(() => {\n    setDoDisplayImage(true)\n\n    const image = loadedImage.current\n\n    setImageProps({\n      width: image.clientWidth,\n      height: image.clientHeight,\n      selectionShape: imageProps.selectionShape,\n      isConfirmed: imageProps.isConfirmed\n    })\n\n    setDoDisplayImage(false)\n  }, [])\n\n  const onWidthChange = e => setImageProps({\n    width: e.target.value,\n    height: imageProps.height,\n    selectionShape: imageProps.selectionShape,\n    isConfirmed: imageProps.isConfirmed\n  })\n\n  const onHeightChange = e => setImageProps({\n    width: imageProps.width,\n    height: e.target.value,\n    selectionShape: imageProps.selectionShape,\n    isConfirmed: imageProps.isConfirmed\n  })\n\n  const onRadioChange = e => {\n    const { value } = e.target\n\n    if (value) {\n      setImageProps({\n        width: imageProps.width,\n        height: imageProps.height,\n        selectionShape: value,\n        isConfirmed: imageProps.isConfirmed\n      })\n    }\n  }\n\n  const { propsForm } = context.content.contents.main\n  const { imageSizeBlock, selectionAreaShapeBlock } = propsForm\n\n  return (\n    <Animated>\n      <div style={{ 'visibility': 'hidden ' }}>\n        {doDisplayImage\n          ? <img ref={loadedImage} src={imageSource} alt='loaded'/>\n          : ''\n        }\n      </div>\n      <MDBContainer className='mt-3 form-container text-center'>\n        <div className=\"text-left\">\n          {children}\n        </div>\n        <MDBRow className='mt-3'>\n          <MDBCol>\n            <MDBJumbotron>\n              <h3 className='h1 display-3 text-center'>{propsForm.title}</h3>\n              <hr/>\n              <h2 className='text-center'>{imageSizeBlock.title}</h2>\n              <span className='text-muted text-center size-title'>{imageSizeBlock.note}</span>\n              <div className='content-center'>\n                <form className='form'>\n                  <div className=\"grey-text text-left\">\n                    <MDBInput\n                      label={`${imageSizeBlock.width}`}\n                      icon=\"arrows-alt-h\"\n                      group\n                      type=\"text\"\n                      validate\n                      error=\"wrong\"\n                      success=\"right\"\n                      onChange={onWidthChange}\n                      value={String(imageProps.width)}\n                    />\n                    <MDBInput\n                      label={`${imageSizeBlock.height}`}\n                      icon=\"arrows-alt-v\"\n                      group\n                      type=\"email\"\n                      validate\n                      error=\"wrong\"\n                      success=\"right\"\n                      onChange={onHeightChange}\n                      value={String(imageProps.height)}\n                    />\n                  </div>\n                </form>\n              </div>\n              <h2 className='text-center'>{selectionAreaShapeBlock.title}</h2>\n              <span className='text-muted text-center size-title'>{selectionAreaShapeBlock.note}</span>\n              <div className=\"content-center mt-3 text-muted\">\n                <form>\n                  <div id=\"checkboxes\" className='checkboxes'>\n                    <div className=\"checkboxgroup\">\n                      <label htmlFor=\"my_radio_button_id1\">\n                        <i className=\"far fa-square radio-icon\"></i>\n                      </label>\n                      <input\n                        onClick={onRadioChange}\n                        value='rect'\n                        type=\"radio\"\n                        name=\"radio\"\n                        id=\"my_radio_button_id1\"\n                        defaultChecked={`${imageProps.selectionShape === 'rect' ? 'checked' : ''}`}\n                      />\n                    </div>\n                    <div className=\"checkboxgroup\">\n                      <label htmlFor=\"my_radio_button_id2\">\n                        <i className=\"far fa-circle radio-icon\"></i>\n                      </label>\n                      <input\n                        onClick={onRadioChange}\n                        value='circle'\n                        type=\"radio\"\n                        name=\"radio\"\n                        id=\"my_radio_button_id2\"\n                        defaultChecked={`${imageProps.selectionShape === 'circle' ? 'checked' : ''}`}\n                      />\n                    </div>\n                    <div className=\"checkboxgroup mb-3\">\n                      <label htmlFor=\"my_radio_button_id3\">\n                        <i className=\"fas fa-draw-polygon radio-icon\"></i>\n                      </label>\n                      <input\n                        onClick={onRadioChange}\n                        value='poly'\n                        type=\"radio\"\n                        name=\"radio\"\n                        id=\"my_radio_button_id3\"\n                        defaultChecked={`${imageProps.selectionShape === 'poly' ? 'checked' : ''}`}\n                      />\n                    </div>\n                  </div>\n                </form>\n              </div>\n            </MDBJumbotron>\n          </MDBCol>\n        </MDBRow>\n      </MDBContainer>\n    </Animated>\n  )\n}\n\nPropsForm.propTypes = propTypes\n\nexport default PropsForm\n","export const drawImage = (ctx, img, width, height) => ctx.drawImage(img, 0, 0, width, height)\n\nexport const drawStrokesForPoly = (ctx, strokesCoords, fillStyle, strokeStyle) => strokesCoords.forEach(item => {\n  ctx.fillStyle = fillStyle\n  ctx.strokeStyle = strokeStyle\n\n  ctx.beginPath()\n\n  ctx.arc(item[0], item[1], 2, 0, 2 * Math.PI)\n\n  ctx.fill()\n  ctx.stroke()\n})\n\nexport function drawStrokesForRect (ctx, strokesCoords, fillStyle, strokeStyle) {\n  ctx.fillStyle = fillStyle\n  ctx.strokeStyle = strokeStyle\n\n  ctx.beginPath()\n\n  ctx.arc(strokesCoords[0], strokesCoords[1], 2, 0, 2 * Math.PI)\n\n  ctx.fill()\n\n  ctx.stroke()\n}\n\nexport function drawPoly (ctx, coords, fillStyle) {\n  if (coords.length > 2) {\n    ctx.fillStyle = fillStyle\n\n    ctx.beginPath()\n    ctx.moveTo(coords[0][0], coords[0][1])\n\n    coords.forEach(element => ctx.lineTo(element[0], element[1]))\n\n    ctx.closePath()\n\n    ctx.fill()\n  }\n}\n\nexport function drawRect (ctx, topLeftX, topLeftY, width, height, fillStyle, strokeStyle) {\n  ctx.fillStyle = fillStyle\n  ctx.strokeStyle = strokeStyle\n\n  ctx.beginPath()\n\n  ctx.rect(topLeftX, topLeftY, width, height)\n\n  ctx.fill()\n\n  ctx.stroke()\n}\n\nexport function drawCircle (ctx, centerX, centerY, radius, fillStyle, strokeStyle) {\n  ctx.fillStyle = fillStyle\n  ctx.strokeStyle = strokeStyle\n\n  ctx.beginPath()\n\n  ctx.arc(centerX, centerY, radius, 0, 2 * Math.PI)\n  ctx.fill()\n\n  ctx.stroke()\n}\n\nexport function drawLine (ctx, fromCoords, toCoords) {\n  ctx.beginPath()\n\n  ctx.moveTo(fromCoords[0], fromCoords[1])\n  ctx.lineTo(toCoords[0], toCoords[1])\n\n  ctx.stroke()\n}\n","export default function getCoordinates (e) {\n  const rect = e.target.getBoundingClientRect()\n\n  const x = e.clientX - rect.left\n  const y = e.clientY - rect.top\n\n  return [ x, y ]\n}\n","/**\n * TODO: Implement Context API or Redux for managing global state\n * and reduce parent > child > parent data & functions transfer\n */\n\nimport React, { useState, useEffect, useRef } from 'react'\nimport { func, object, array, ReactElement } from 'prop-types'\nimport { drawImage, drawStrokesForPoly, drawPoly } from '../../../../javascripts/draw.js'\nimport getCoordinates from '../../../../javascripts/getCoordinates.js'\n\nconst propTypes = {\n  coords: array,\n  coordsHistory: array,\n  imageToDraw: ReactElement,\n  canvasProps: object,\n  setCoords: func,\n  setCoordsHistory: func,\n  setCurrentCoords: func\n}\n\nfunction Poly ({\n  coords,\n  coordsHistory,\n  imageToDraw,\n  canvasProps,\n  setCoords,\n  setCoordsHistory,\n  setCurrentCoords\n}) {\n  const [isMousePressed, setIsMousePressed] = useState(false)\n\n  const canvasRef = useRef(null)\n\n  useEffect(() => {\n    if (imageToDraw) {\n      const canvas = canvasRef.current\n      const ctx = canvas.getContext('2d')\n\n      ctx.clearRect(0, 0, canvas.width, canvas.height)\n\n      drawImage(ctx, imageToDraw, canvasProps.width, canvasProps.height)\n\n      drawStrokesForPoly(ctx, coords, 'rgb(255, 99, 71)', 'rgb(255, 99, 71)')\n\n      drawPoly(ctx, coords, 'rgba(148, 110, 110, 0.3)')\n    }\n  }, [coords, imageToDraw])\n\n  const onMouseDown = e => {\n    const current = getCoordinates(e)\n\n    setCurrentCoords(current)\n    setCoords([...coords, current])\n\n    setIsMousePressed(true)\n  }\n\n  const onMouseUp = () => setIsMousePressed(false)\n\n  const onMouseMove = e => {\n    if (isMousePressed) {\n      const current = getCoordinates(e)\n\n      setCurrentCoords(current)\n      setCoords([...coords, current])\n    }\n  }\n\n  return (\n    <>\n      <canvas\n        ref={canvasRef}\n        width={canvasProps.width}\n        height={canvasProps.height}\n        onMouseDown={onMouseDown}\n        onMouseUp={onMouseUp}\n        onMouseMove={onMouseMove}\n      />\n    </>\n  )\n}\n\nPoly.propTypes = propTypes\n\nexport default Poly\n","/**\n * TODO: Implement Context API or Redux for managing global state\n * and reduce parent > child > parent data & functions transfer\n */\n\nimport React, { useState, useEffect, useRef } from 'react'\nimport { func, object, array } from 'prop-types'\nimport { drawImage, drawStrokesForRect, drawRect } from '../../../../javascripts/draw.js'\nimport getCoordinates from '../../../../javascripts/getCoordinates.js'\n\nconst propTypes = {\n  coords: array,\n  coordsHistory: array,\n  imageToDraw: object,\n  canvasProps: object,\n  setCoords: func,\n  setCurrentCoords: func,\n  setCoordsHistory: func\n}\n\nfunction Rect ({\n  coords,\n  coordsHistory,\n  imageToDraw,\n  canvasProps,\n  setCoords,\n  setCoordsHistory\n}) {\n  const [topLeftCoords, setTopLeftCoords] = useState([])\n  const [bottomRightCoords, setBottomRightCoords] = useState([])\n\n  const [areCoordsReady, setAreCoordsReady] = useState(false)\n  const [isMousePressed, setIsMousePressed] = useState(false)\n\n  const canvasRef = useRef(null)\n\n  useEffect(() => {\n    if (topLeftCoords.length > 0 && bottomRightCoords.length > 0) {\n      setCoords([topLeftCoords, bottomRightCoords])\n      setAreCoordsReady(true)\n    }\n  }, [topLeftCoords, bottomRightCoords])\n\n  useEffect(() => {\n    if (imageToDraw) {\n      const canvas = canvasRef.current\n      const ctx = canvas.getContext('2d')\n\n      ctx.clearRect(0, 0, canvas.width, canvas.height)\n\n      drawImage(ctx, imageToDraw, canvasProps.width, canvasProps.height)\n\n      coords.forEach(item => drawStrokesForRect(ctx, item, 'rgb(255, 99, 71)', 'rgb(255, 99, 71)'))\n\n      if (areCoordsReady && coords.length > 1) {\n        const rectWidth = coords[1][0] - coords[0][0]\n        const rectHeight = coords[1][1] - coords[0][1]\n\n        drawRect(ctx, coords[0][0], coords[0][1], rectWidth, rectHeight, 'rgba(148, 110, 110, 0.3)', 'rgba(255, 255, 255, 0)')\n      }\n    }\n  }, [coords, imageToDraw])\n\n  const onMouseDown = e => {\n    setTopLeftCoords(getCoordinates(e))\n\n    setBottomRightCoords([])\n\n    setIsMousePressed(true)\n  }\n\n  const onMouseUp = () => {\n    setIsMousePressed(false)\n\n    setCoordsHistory([...coordsHistory, coords])\n  }\n\n  const onMouseMove = e => {\n    if (isMousePressed) {\n      setBottomRightCoords(getCoordinates(e))\n    }\n  }\n\n  return (\n    <>\n      <canvas\n        ref={canvasRef}\n        width={canvasProps.width}\n        height={canvasProps.height}\n        onMouseDown={onMouseDown}\n        onMouseUp={onMouseUp}\n        onMouseMove={onMouseMove}\n      >\n      </canvas>\n    </>\n  )\n}\n\nRect.propTypes = propTypes\n\nexport default Rect\n","const getRadius = (centerCoords, edgeCoords) =>\n  Math.sqrt(Math.pow(edgeCoords[0] - centerCoords[0], 2) + Math.pow(edgeCoords[1] - centerCoords[1], 2))\n\nexport default getRadius\n","/**\n * TODO: Implement Context API or Redux for managing global state\n * and reduce parent > child > parent data & functions transfer\n */\n\nimport React, { useState, useEffect, useRef } from 'react'\nimport { func, object, array, ReactElement } from 'prop-types'\nimport { drawImage, drawStrokesForRect, drawCircle } from '../../../../javascripts/draw.js'\nimport getCoordinates from '../../../../javascripts/getCoordinates.js'\nimport getRadius from '../../../../javascripts/getRadius'\n\nconst propTypes = {\n  coords: array,\n  coordsHistory: array,\n  imageToDraw: ReactElement,\n  canvasProps: object,\n  setCoords: func,\n  setCurrentCoords: func,\n  setCoordsHistory: func\n}\n\nfunction Rect ({\n  coords,\n  coordsHistory,\n  imageToDraw,\n  canvasProps,\n  setCoords,\n  setCoordsHistory\n}) {\n  const [centerCoords, setCenterCoords] = useState([])\n  const [edgeCoords, setEdgeCoords] = useState([])\n\n  const [isMousePressed, setIsMousePressed] = useState(false)\n  const [areCoordsReady, setAreCoordsReady] = useState(false)\n\n  const canvasRef = useRef(null)\n\n  useEffect(() => {\n    if (centerCoords.length > 0 && edgeCoords.length > 0) {\n      setCoords([centerCoords, edgeCoords])\n      setAreCoordsReady(true)\n    } else {\n      setAreCoordsReady(false)\n    }\n  }, [centerCoords, edgeCoords])\n\n  useEffect(() => {\n    if (imageToDraw) {\n      const canvas = canvasRef.current\n      const ctx = canvas.getContext('2d')\n\n      ctx.clearRect(0, 0, canvas.width, canvas.height)\n\n      drawImage(ctx, imageToDraw, canvasProps.width, canvasProps.height)\n\n      if (areCoordsReady && coords.length > 1) {\n        coords.forEach(item => drawStrokesForRect(ctx, item, 'rgb(255, 99, 71)', 'rgb(255, 99, 71)'))\n\n        // drawLine(ctx, coords[0], coords[1])\n\n        drawCircle(ctx, coords[0][0], coords[0][1], getRadius(coords[0], coords[1]), 'rgba(148, 110, 110, 0.3)', 'rgba(255, 255, 255, 0')\n      }\n    }\n  }, [coords, imageToDraw])\n\n  const onMouseDown = e => {\n    setCenterCoords(getCoordinates(e))\n    setEdgeCoords([])\n    setIsMousePressed(true)\n  }\n\n  const onMouseUp = () => {\n    setIsMousePressed(false)\n\n    setCoordsHistory([...coordsHistory, coords])\n  }\n\n  const onMouseMove = e => {\n    if (isMousePressed) {\n      setEdgeCoords(getCoordinates(e))\n    }\n  }\n\n  return (\n    <>\n      <canvas\n        ref={canvasRef}\n        width={canvasProps.width}\n        height={canvasProps.height}\n        onMouseDown={onMouseDown}\n        onMouseUp={onMouseUp}\n        onMouseMove={onMouseMove}\n      >\n      </canvas>\n    </>\n  )\n}\n\nRect.propTypes = propTypes\n\nexport default Rect\n","/**\n * TODO: Implement Context API or Redux for managing global state\n * and reduce parent > child > parent data & functions transfer\n */\n\nimport React, { useState, useEffect } from 'react'\nimport { func, object, array } from 'prop-types'\nimport Poly from './selectionShape/Poly'\nimport Rect from './selectionShape/Rect'\nimport Circle from './selectionShape/Circle'\n\nconst propTypes = {\n  coords: array,\n  coordsHistory: array,\n  image: object,\n  imageProps: object,\n  formContainerProps: object,\n  canvasProps: object,\n  setCanvasProps: func,\n  setCoordsHistory: func,\n  setCoords: func,\n  setCurrentCoords: func,\n  undo: func\n}\n\nfunction ImageCanvas ({\n  coords,\n  coordsHistory,\n  image,\n  formContainerProps,\n  imageProps,\n  canvasProps,\n  setCanvasProps,\n  setCoords,\n  setCurrentCoords,\n  setCoordsHistory,\n  undo\n}) {\n  const [imageToDraw, setImageToDraw] = useState(null)\n\n  useEffect(() => {\n    if (formContainerProps.width && formContainerProps.height) {\n      if (imageProps.width > formContainerProps.width) {\n        const imageRatio = imageProps.width / imageProps.height\n        const newWidth = formContainerProps.width * 0.9\n\n        setCanvasProps({\n          width: newWidth,\n          height: newWidth / imageRatio\n        })\n      } else {\n        setCanvasProps({\n          width: imageProps.width,\n          height: imageProps.height\n        })\n      }\n    }\n  }, [formContainerProps])\n\n  useEffect(() => {\n    const baseImage = new Image()\n\n    baseImage.src = image.source\n\n    baseImage.width = canvasProps.width\n    baseImage.height = canvasProps.height\n\n    baseImage.onload = () => setImageToDraw(baseImage)\n  }, [canvasProps])\n\n  const { selectionShape } = imageProps\n\n  return (\n    <>\n      {selectionShape === 'poly'\n        ? (\n          <Poly\n            coords={coords}\n            imageToDraw={imageToDraw}\n            canvasProps={canvasProps}\n            setCoords={setCoords}\n            setCurrentCoords={setCurrentCoords}\n          />\n        )\n        : selectionShape === 'rect'\n          ? (\n            <Rect\n              coords={coords}\n              coordsHistory={coordsHistory}\n              imageToDraw={imageToDraw}\n              canvasProps={canvasProps}\n              setCoords={setCoords}\n              setCoordsHistory={setCoordsHistory}\n              setCurrentCoords={setCurrentCoords}\n              undo={undo}\n            />\n          )\n          : selectionShape === 'circle'\n            ? (\n              <Circle\n                coords={coords}\n                coordsHistory={coordsHistory}\n                imageToDraw={imageToDraw}\n                canvasProps={canvasProps}\n                setCoords={setCoords}\n                setCoordsHistory={setCoordsHistory}\n                setCurrentCoords={setCurrentCoords}\n                undo={undo}\n              />\n            )\n            : ''\n      }\n    </>\n  )\n}\n\nImageCanvas.propTypes = propTypes\n\nexport default ImageCanvas\n","import React, { useState, useRef, useEffect, useContext } from 'react'\nimport { element, object } from 'prop-types'\nimport { MDBBtn, MDBContainer, MDBRow, MDBCol, MDBInput } from 'mdbreact'\nimport ImageCanvas from './ImageCanvas'\nimport getRadius from '../../../javascripts/getRadius'\nimport Animated from '../../other/Animated'\nimport localeContext from '../../../context/locale-context.js'\n\nconst propTypes = {\n  children: element,\n  image: object,\n  imageProps: object\n}\n\nfunction CoordinatePicker ({ children, image, imageProps }) {\n  const [coords, setCoords] = useState([])\n  const [coordsToDisplay, setCoordsToDisplay] = useState(undefined)\n  const [removedCoords, setRemovedCoords] = useState([])\n  const [coordsHistory, setCoordsHistory] = useState([])\n  const [currentCoords, setCurrentCoords] = useState(undefined)\n\n  const [canvasProps, setCanvasProps] = useState({\n    width: imageProps.width,\n    height: imageProps.height\n  })\n\n  const [formContainerProps, setformContainerProps] = useState({\n    width: null,\n    height: null\n  })\n\n  const formContainer = useRef(null)\n\n  const context = useContext(localeContext)\n\n  useEffect(() => {\n    setformContainerProps({\n      width: formContainer.current.clientWidth,\n      height: formContainer.current.clientHeight\n    })\n  }, [])\n\n  useEffect(() => {\n    switch (imageProps.selectionShape) {\n      case 'rect':\n      case 'poly': {\n        setCoordsToDisplay(`${\n          (coords && coords.length > 0 && coords !== [])\n            ? (\n              `${\n                coords\n                  .map(xy => getNaturalCoords(xy, canvasProps, imageProps))\n                  .join(',')\n              }`\n            )\n            : ''\n        }`)\n        break\n      }\n      case 'circle': {\n        setCoordsToDisplay(`${\n          (coords && coords.length > 0 && coords !== [])\n            ? `${getNaturalCoords(coords[0], canvasProps, imageProps)},${Math.round(getRadius(getNaturalCoords(coords[0], canvasProps, imageProps), getNaturalCoords(coords[1], canvasProps, imageProps)))}`\n            : ''\n        }`)\n        break\n      }\n      default: {\n        setCoordsToDisplay(undefined)\n        break\n      }\n    }\n  }, [coords])\n\n  const clearCoords = () => {\n    setCoordsHistory([])\n    setCoords([])\n    setRemovedCoords([])\n    setCurrentCoords(null)\n  }\n\n  const undo = () => {\n    if (imageProps.selectionShape === 'poly') {\n      if (coords.length >= 1) {\n        setCoords(coords.slice(0, -1))\n        setCurrentCoords(coords[coords.length - 2])\n        setRemovedCoords([...removedCoords, coords.pop()])\n      }\n    } else {\n      if (coordsHistory.length > 1) {\n        const currentCoordsHistory = coordsHistory.slice(0, -1)\n\n        // TODO: Refactor this code\n        setCoordsHistory(currentCoordsHistory)\n        setCoords(coordsHistory.slice(0, -1).pop())\n        setRemovedCoords([...removedCoords, coords])\n      }\n    }\n  }\n\n  const redo = () => {\n    if (imageProps.selectionShape === 'poly') {\n      if (removedCoords.length >= 1) {\n        const currentRemovedCoords = removedCoords.slice(0, -1)\n        const lastRemoved = removedCoords.pop()\n\n        setRemovedCoords(currentRemovedCoords)\n        setCoords([...coords, lastRemoved])\n        setCurrentCoords(coords[coords.length - 2])\n      }\n    } else {\n      const currentRemovedCoords = removedCoords.slice(0, -1)\n      const lastRemoved = removedCoords.pop()\n\n      setCoordsHistory([...coordsHistory, lastRemoved])\n      setRemovedCoords(currentRemovedCoords)\n      setCoords(lastRemoved)\n    }\n  }\n\n  const getNaturalCoords = (xy, currentProps, naturalProps) => (\n    [\n      Math.round(xy[0] * (naturalProps.width / currentProps.width)),\n      Math.round(xy[1] * (naturalProps.height / currentProps.height))\n    ]\n  )\n\n  const { title, note, lastCoords, allCoords } = context.content.contents.main.coordinatePickerForm\n  const { undo: undoBtnCap, redo: redoBtnCap, clear } = context.content.contents.main.buttons\n\n  return (\n    <Animated>\n      <MDBContainer className='mt-3 form-container text-center'>\n        <div className=\"text-left\">\n          {children}\n        </div>\n        <MDBRow className='mt-3'>\n          <MDBCol>\n            <div className='jumbotron' ref={formContainer}>\n              {/* TODO: Implement Context API or Redux for managing global state\n           and reduce parent > child > parent data & functions transfer */}\n              <ImageCanvas\n              // Coords\n                coords={coords}\n                removedCoords={removedCoords}\n                currentCoords={currentCoords}\n                coordsHistory={coordsHistory}\n                // Props objects\n                image={image}\n                canvasProps={canvasProps}\n                imageProps={imageProps}\n                formContainerProps={formContainerProps}\n                // Functions\n                setCoordsHistory={setCoordsHistory}\n                setCanvasProps={setCanvasProps}\n                setRemovedCoords={setRemovedCoords}\n                setCoords={setCoords}\n                setCurrentCoords={setCurrentCoords}\n                undo={undo}\n              />\n              <h2 className='text-center mt-3'>{title}</h2>\n              <span className='text-muted text-center size-title'>{note}</span>\n              <div className='content-center-auto'>\n                <div className=\"grey-text text-left\">\n                  {imageProps.selectionShape === 'poly'\n                    ? (\n                      <MDBInput\n                        label={lastCoords}\n                        icon=\"map-marker-alt\"\n                        group\n                        type=\"text\"\n                        validate\n                        error=\"wrong\"\n                        success=\"right\"\n                        value={`${currentCoords ? `${getNaturalCoords(currentCoords, canvasProps, imageProps)}` : ''}`}\n                      />\n                    )\n                    : ''\n                  }\n                  <MDBInput\n                    label={allCoords}\n                    icon=\"map\"\n                    group\n                    type=\"text\"\n                    validate\n                    error=\"wrong\"\n                    success=\"right\"\n                    className='text'\n                    value={coordsToDisplay}\n                  />\n                </div>\n                <div className=\"control-buttons\">\n                  <MDBBtn\n                    onClick={undo}\n                    className={`uppercase  ${(coords.length < 1 || (imageProps.selectionShape !== 'poly' && coordsHistory.length < 2)) ? 'disabled' : ''}`}\n                  >\n                    <i className=\"fas fa-undo\"></i> {undoBtnCap}\n                  </MDBBtn>\n                  <MDBBtn\n                    onClick={redo}\n                    className={`uppercase ${removedCoords.length < 1 ? 'disabled' : ''}`}\n                  >\n                    <i className=\"fas fa-redo\"></i> {redoBtnCap}\n                  </MDBBtn>\n                  <MDBBtn\n                    color='danger'\n                    onClick={clearCoords}\n                    className='uppercase'\n                  >\n                    <i className=\"fas fa-times\"></i> {clear}\n                  </MDBBtn>\n                </div>\n              </div>\n            </div>\n          </MDBCol>\n        </MDBRow>\n      </MDBContainer>\n    </Animated>\n  )\n}\n\nCoordinatePicker.propTypes = propTypes\n\nexport default CoordinatePicker\n","import React, { useState, useContext } from 'react'\nimport './coordinator-form.scss'\nimport { object, func } from 'prop-types'\nimport { MDBBtn } from 'mdbreact'\n\nimport PropsForm from './PropsForm'\nimport CoordinatePicker from './CoordinatePicker'\nimport localeContext from '../../../context/locale-context.js'\n\nconst propTypes = {\n  image: object,\n  setImage: func\n}\n\nfunction CoordinatorForm ({ image, setImage }) {\n  const [imageProps, setImageProps] = useState({\n    width: undefined,\n    height: undefined,\n    selectionShape: 'rect',\n    isConfirmed: false\n  })\n\n  const context = useContext(localeContext)\n\n  const onCancelClick = () => setImage({\n    title: image.title,\n    source: image.source,\n    isConfirmed: false\n  })\n\n  const onNextClick = () => setImageProps({\n    width: imageProps.width,\n    height: imageProps.height,\n    selectionShape: imageProps.selectionShape,\n    isConfirmed: true\n  })\n\n  const onEditClick = () => setImageProps({\n    width: imageProps.width,\n    height: imageProps.height,\n    selectionShape: imageProps.selectionShape,\n    isConfirmed: false\n  })\n\n  const { cancel, next, edit } = context.content.contents.main.buttons\n\n  return (\n    <>\n      {!imageProps.isConfirmed\n        ? (\n          <PropsForm\n            imageSource={image.source}\n            imageProps={imageProps}\n            setImageProps={setImageProps}\n          >\n            <div className=\"buttons\">\n              <div className=\"button button_cancel\">\n                <MDBBtn color='dark' onClick={onCancelClick} className='uppercase'>\n                  <i className=\"fas fa-times\"></i> {cancel}\n                </MDBBtn>\n              </div>\n              <div className=\"button button_edit\">\n                <MDBBtn color='primary' onClick={onNextClick} className='uppercase'>\n                  <i className=\"fas fa-chevron-right\"></i> {next}\n                </MDBBtn>\n              </div>\n            </div>\n          </PropsForm>\n        )\n        : (\n          <CoordinatePicker\n            imageProps={imageProps}\n            image={image}\n          >\n            <div className=\"buttons\">\n              <div className=\"button button_cancel\">\n                <MDBBtn color='dark' onClick={onCancelClick} className='uppercase'>\n                  <i className=\"fas fa-times\"></i> {cancel}\n                </MDBBtn>\n              </div>\n              <div className=\"button button_edit\">\n                <MDBBtn onClick={onEditClick} className='uppercase'>\n                  <i className=\"fas fa-pen\"></i> {edit}\n                </MDBBtn>\n              </div>\n            </div>\n          </CoordinatePicker>\n        )\n      }\n    </>\n  )\n}\n\nCoordinatorForm.propTypes = propTypes\n\nexport default CoordinatorForm\n","import React, { useState } from 'react'\nimport './main.scss'\n\nimport UploadForm from './upload-form/UploadForm'\nimport CoordinatorForm from './сoordinator-form/CoordinatorForm'\n\nfunction Main () {\n  const [image, setImage] = useState({\n    title: null,\n    source: null,\n    isConfirmed: false\n  })\n\n  return (\n    <>\n      {!image.isConfirmed\n        ? <UploadForm image={image} setImage={setImage}/>\n        : (\n          <CoordinatorForm\n            image={image}\n            setImage={setImage}\n          />\n        )\n      }\n    </>\n  )\n}\n\nexport default Main\n","import en from './en.json'\nimport ukr from './ukr.json'\nimport ru from './ru.json'\n\nexport default { en, ukr, ru }\n","import localeCollection from '../static/locale/index'\n\nconst updateLocale = (locale, state) => {\n  return { ...state, currentLang: locale, content: localeCollection[locale] }\n}\n\nexport default (state, action) => {\n  switch (action.type) {\n    case 'UPDATE_LOCALE': {\n      console.log(`Lang updated to ${action.locale}`)\n      return updateLocale(action.locale, state)\n    }\n\n    default: {\n      return state\n    }\n  }\n}\n","import React, { useReducer } from 'react'\nimport LocaleContext from './locale-context'\nimport localeReducer from '../reducers/locale-reducer'\nimport { node } from 'prop-types'\nimport localeCollection from '../static/locale/index.js'\n\nconst propTypes = { children: node }\n\nfunction GlobalState ({ children }) {\n  const [localeState, dispatch] = useReducer(localeReducer, { currentLang: null, content: {} })\n\n  const updateLocale = locale => dispatch({ type: 'UPDATE_LOCALE', locale: locale })\n\n  const langsList = Object.keys(localeCollection).map(key => ({\n    name: localeCollection[key].name,\n    short: localeCollection[key].short\n  }))\n\n  return (\n    <LocaleContext.Provider\n      value={{\n        currentLang: localeState.currentLang,\n        content: localeState.content,\n        updateLocale: updateLocale,\n        langsList: langsList\n      }}\n    >\n      {children}\n    </LocaleContext.Provider>\n  )\n}\n\nGlobalState.propTypes = propTypes\n\nexport default GlobalState\n","import { hot } from 'react-hot-loader/root'\nimport React from 'react'\nimport Layout from './layout/Layout'\nimport { BrowserRouter as Router } from 'react-router-dom'\nimport Main from './main/Main'\nimport GlobalState from '../context/GlobalState'\n\nfunction App (props) {\n  return (\n    <GlobalState>\n      <Router>\n        <Layout>\n          <Main />\n        </Layout>\n      </Router>\n    </GlobalState>\n  )\n}\n\nexport default hot(App)\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n)\n\nexport function register (config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          )\n        })\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config)\n      }\n    })\n  }\n}\n\nfunction registerValidSW (swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        if (installingWorker == null) {\n          return\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              )\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration)\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.')\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration)\n              }\n            }\n          }\n        }\n      }\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error)\n    })\n}\n\nfunction checkValidServiceWorker (swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type')\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config)\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      )\n    })\n}\n\nexport function unregister () {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister()\n    })\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\n\n// MDB\nimport '@fortawesome/fontawesome-free/css/all.min.css'\nimport 'bootstrap-css-only/css/bootstrap.min.css'\nimport 'mdbreact/dist/css/mdb.css'\n\nimport App from './components/App'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(<App />, document.querySelector('#root'))\n\nif (process.env.NODE_ENV === 'production') {\n  serviceWorker.register()\n} else {\n  serviceWorker.unregister()\n}\n"],"sourceRoot":""}