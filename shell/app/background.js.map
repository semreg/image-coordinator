{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/background.js","webpack:///./src/menu/dev_menu_template.js","webpack:///external \"electron\"","webpack:///external \"electron-debug\"","webpack:///external \"electron-devtools-installer\"","webpack:///external \"electron-log\"","webpack:///external \"electron-updater\"","webpack:///external \"path\"","webpack:///external \"url\""],"names":["AppUpdater","constructor","log","transports","file","level","autoUpdater","logger","checkForUpdatesAndNotify","mainWindow","setApplicationMenu","menus","Menu","buildFromTemplate","process","require","installExtensions","installer","forceDownload","env","UPGRADE_EXTENSIONS","extensions","Promise","all","map","name","default","catch","console","app","on","platform","quit","BrowserWindow","show","width","height","loadURL","url","format","pathname","path","join","__dirname","protocol","slashes","webContents","Error","START_MINIMIZED","minimize","focus","devMenuTemplate","label","submenu","accelerator","click","getFocusedWindow","reloadIgnoringCache","toggleDevTools"],"mappings":"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","file":"background.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/background.js\");\n","/* eslint global-require: off */\n\n/**\n * This module executes inside of electron's main process. You can start\n * electron renderer process from here and communicate with the other processes\n * through IPC.\n *\n * When running `yarn build` or `yarn build-main`, this file is compiled to\n * `./app/main.prod.js` using webpack. This gives us some performance wins.\n *\n * @flow\n */\nimport { app, BrowserWindow, Menu } from 'electron'\nimport { autoUpdater } from 'electron-updater'\nimport log from 'electron-log'\nimport url from 'url'\nimport path from 'path'\nimport { devMenuTemplate } from './menu/dev_menu_template'\nimport env from 'env'\n\nexport default class AppUpdater {\n  constructor () {\n    log.transports.file.level = 'info'\n    autoUpdater.logger = log\n    autoUpdater.checkForUpdatesAndNotify()\n  }\n}\n\nlet mainWindow = null\n\nconst setApplicationMenu = () => {\n  const menus = []\n  // if (env.name !== 'production') {\n  //   menus.push(devMenuTemplate)\n  // }\n  Menu.setApplicationMenu(Menu.buildFromTemplate(menus))\n}\n\nif (process.env.NODE_ENV === 'production') {\n  const sourceMapSupport = require('source-map-support')\n  sourceMapSupport.install()\n}\n\nif (\n  process.env.NODE_ENV === 'development' ||\n  process.env.DEBUG_PROD === 'true'\n) {\n  require('electron-debug')()\n}\n\nconst installExtensions = async () => {\n  const installer = require('electron-devtools-installer')\n  const forceDownload = !!process.env.UPGRADE_EXTENSIONS\n  const extensions = ['REACT_DEVELOPER_TOOLS', 'REDUX_DEVTOOLS']\n\n  return Promise.all(\n    extensions.map(name => installer.default(installer[name], forceDownload))\n  ).catch(console.log)\n}\n\n/**\n * Add event listeners...\n */\n\napp.on('window-all-closed', () => {\n  // Respect the OSX convention of having the application in memory even\n  // after all windows have been closed\n  if (process.platform !== 'darwin') {\n    app.quit()\n  }\n})\n\napp.on('ready', async () => {\n  setApplicationMenu()\n\n  if (\n    process.env.NODE_ENV === 'development' ||\n    process.env.DEBUG_PROD === 'true'\n  ) {\n    await installExtensions()\n  }\n\n  mainWindow = new BrowserWindow({\n    show: false,\n    width: 1366,\n    height: 800\n  })\n\n  mainWindow.loadURL(\n    url.format({\n      pathname: path.join(__dirname, './index.html'),\n      protocol: 'file:',\n      slashes: true\n    })\n  )\n\n  // @TODO: Use 'ready-to-show' event\n  //        https://github.com/electron/electron/blob/master/docs/api/browser-window.md#using-ready-to-show-event\n  mainWindow.webContents.on('did-finish-load', () => {\n    if (!mainWindow) {\n      throw new Error('\"mainWindow\" is not defined')\n    }\n    if (process.env.START_MINIMIZED) {\n      mainWindow.minimize()\n    } else {\n      mainWindow.show()\n      mainWindow.focus()\n    }\n  })\n\n  mainWindow.on('closed', () => {\n    mainWindow = null\n  })\n\n  // Remove this if your app does not use auto updates\n  // eslint-disable-next-line\n  new AppUpdater();\n})\n","import { app, BrowserWindow } from 'electron'\n\nexport const devMenuTemplate = {\n  label: 'Development',\n  submenu: [\n    {\n      label: 'Reload',\n      accelerator: 'CmdOrCtrl+R',\n      click: () => {\n        BrowserWindow.getFocusedWindow().webContents.reloadIgnoringCache()\n      }\n    },\n    {\n      label: 'Toggle DevTools',\n      accelerator: 'Alt+CmdOrCtrl+I',\n      click: () => {\n        BrowserWindow.getFocusedWindow().toggleDevTools()\n      }\n    },\n    {\n      label: 'Quit',\n      accelerator: 'CmdOrCtrl+Q',\n      click: () => {\n        app.quit()\n      }\n    }\n  ]\n}\n","module.exports = require(\"electron\");","module.exports = require(\"electron-debug\");","module.exports = require(\"electron-devtools-installer\");","module.exports = require(\"electron-log\");","module.exports = require(\"electron-updater\");","module.exports = require(\"path\");","module.exports = require(\"url\");"],"sourceRoot":""}