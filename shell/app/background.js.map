{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///external \"electron\"","webpack:///external \"electron-updater\"","webpack:///external \"electron-log\"","webpack:///external \"url\"","webpack:///external \"path\"","webpack:///external \"source-map-support\"","webpack:///external \"electron-debug\"","webpack:///external \"electron-devtools-installer\"","webpack:///./src/background.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","require","__webpack_exports__","background_AppUpdater","AppUpdater","constructor","log","transports","file","level","autoUpdater","logger","checkForUpdatesAndNotify","mainWindow","install","process","env","DEBUG_PROD","app","on","platform","quit","async","Menu","setApplicationMenu","buildFromTemplate","installer","forceDownload","UPGRADE_EXTENSIONS","Promise","all","map","default","catch","console","installExtensions","BrowserWindow","show","width","height","loadURL","url","format","pathname","path","join","__dirname","protocol","slashes","webContents","Error","START_MINIMIZED","minimize","focus"],"mappings":"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","file":"background.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 16);\n","module.exports = require(\"electron\");","module.exports = require(\"electron-updater\");","module.exports = require(\"electron-log\");","module.exports = require(\"url\");","module.exports = require(\"path\");","module.exports = require(\"source-map-support\");","module.exports = require(\"electron-debug\");","module.exports = require(\"electron-devtools-installer\");","/* eslint global-require: off */\n\n/**\n * This module executes inside of electron's main process. You can start\n * electron renderer process from here and communicate with the other processes\n * through IPC.\n *\n * When running `yarn build` or `yarn build-main`, this file is compiled to\n * `./app/main.prod.js` using webpack. This gives us some performance wins.\n *\n * @flow\n */\nimport { app, BrowserWindow, Menu } from 'electron'\nimport { autoUpdater } from 'electron-updater'\nimport log from 'electron-log'\nimport url from 'url'\nimport path from 'path'\nimport { devMenuTemplate } from './menu/dev_menu_template'\nimport env from 'env'\n\nexport default class AppUpdater {\n  constructor () {\n    log.transports.file.level = 'info'\n    autoUpdater.logger = log\n    autoUpdater.checkForUpdatesAndNotify()\n  }\n}\n\nlet mainWindow = null\n\nconst setApplicationMenu = () => {\n  const menus = []\n  // if (env.name !== 'production') {\n  //   menus.push(devMenuTemplate)\n  // }\n  Menu.setApplicationMenu(Menu.buildFromTemplate(menus))\n}\n\nif (process.env.NODE_ENV === 'production') {\n  const sourceMapSupport = require('source-map-support')\n  sourceMapSupport.install()\n}\n\nif (\n  process.env.NODE_ENV === 'development' ||\n  process.env.DEBUG_PROD === 'true'\n) {\n  require('electron-debug')()\n}\n\nconst installExtensions = async () => {\n  const installer = require('electron-devtools-installer')\n  const forceDownload = !!process.env.UPGRADE_EXTENSIONS\n  const extensions = ['REACT_DEVELOPER_TOOLS', 'REDUX_DEVTOOLS']\n\n  return Promise.all(\n    extensions.map(name => installer.default(installer[name], forceDownload))\n  ).catch(console.log)\n}\n\n/**\n * Add event listeners...\n */\n\napp.on('window-all-closed', () => {\n  // Respect the OSX convention of having the application in memory even\n  // after all windows have been closed\n  if (process.platform !== 'darwin') {\n    app.quit()\n  }\n})\n\napp.on('ready', async () => {\n  setApplicationMenu()\n\n  if (\n    process.env.NODE_ENV === 'development' ||\n    process.env.DEBUG_PROD === 'true'\n  ) {\n    await installExtensions()\n  }\n\n  mainWindow = new BrowserWindow({\n    show: false,\n    width: 1366,\n    height: 800\n  })\n\n  mainWindow.loadURL(\n    url.format({\n      pathname: path.join(__dirname, './index.html'),\n      protocol: 'file:',\n      slashes: true\n    })\n  )\n\n  // @TODO: Use 'ready-to-show' event\n  //        https://github.com/electron/electron/blob/master/docs/api/browser-window.md#using-ready-to-show-event\n  mainWindow.webContents.on('did-finish-load', () => {\n    if (!mainWindow) {\n      throw new Error('\"mainWindow\" is not defined')\n    }\n    if (process.env.START_MINIMIZED) {\n      mainWindow.minimize()\n    } else {\n      mainWindow.show()\n      mainWindow.focus()\n    }\n  })\n\n  mainWindow.on('closed', () => {\n    mainWindow = null\n  })\n\n  // Remove this if your app does not use auto updates\n  // eslint-disable-next-line\n  new AppUpdater();\n})\n"],"sourceRoot":""}