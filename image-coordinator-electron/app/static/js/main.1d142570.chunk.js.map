{"version":3,"sources":["components/layout/nav/Nav.jsx","components/layout/footer/Footer.jsx","components/layout/Layout.jsx","components/main/upload-form/UploadInput.jsx","components/main/upload-form/ConfirmUpload.jsx","components/other/Animated.jsx","components/main/upload-form/UploadForm.jsx","components/main/сoordinator-form/PropsForm.jsx","components/main/сoordinator-form/ImageCanvas.jsx","components/main/сoordinator-form/CoordinatePicker.jsx","components/main/сoordinator-form/CoordinatorForm.jsx","components/main/Main.jsx","components/App.jsx","serviceWorker.js","index.jsx"],"names":["Nav","_useState","useState","_useState2","Object","slicedToArray","isOpen","setIsOpen","react_default","a","createElement","mdbreact_esm","color","dark","expand","className","onClick","id","navbar","left","href","target","rel","fas","icon","right","fab","Footer","Layout","_ref","children","Fragment","nav_Nav","footer_Footer","UploadInput","readURL","isImageDropping","setIsImageDropping","onDragOver","onDragLeave","concat","type","onChange","accept","ConfirmUpload","removeUpload","image","src","source","alt","title","Animated","springProps","useSpring","opacity","marginTop","from","web","div","style","UploadForm","setImage","confirmed","isConfirmed","other_Animated","upload_form_ConfirmUpload","upload_form_UploadInput","e","files","reader","FileReader","onload","result","name","readAsDataURL","PropsForm","imageSource","imageProps","setImageProps","doDisplayImage","setDoDisplayImage","loadedImage","useRef","useEffect","current","width","clientWidth","height","clientHeight","selectionShape","value","visibility","ref","label","group","validate","error","success","String","htmlFor","disabled","defaultChecked","ImageCanvas","coords","formContainerProps","canvasProps","setCanvasProps","setCoords","setCurrentCoords","imageToDraw","setImageToDraw","canvasRef","imageRatio","newWidth","baseImage","Image","canvas","ctx","getContext","clearRect","drawImage","drawStrokes","drawPoly","img","strokesCoords","forEach","item","beginPath","fillStyle","strokeStyle","arc","Math","PI","fill","stroke","length","moveTo","element","lineTo","closePath","rect","getBoundingClientRect","xy","clientX","clientY","top","toConsumableArray","CoordinatePicker","_useState3","_useState4","removedCoords","setRemovedCoords","_useState5","_useState6","currentCoords","_useState7","_useState8","_useState9","_useState10","setformContainerProps","formContainer","console","log","getNaturalCoords","currentProps","naturalProps","_oordinator_form_ImageCanvas","map","join","slice","pop","currentRemovedCoords","lastRemoved","CoordinatorForm","undefined","onCancelClick","_oordinator_form_CoordinatePicker","_oordinator_form_PropsForm","Main","_oordinator_form_CoordinatorForm","upload_form_UploadForm","hot","props","BrowserRouter","layout_Layout","main_Main","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","onUpdate","onSuccess","catch","ReactDOM","render","components_App","document","querySelector","URL","process","origin","addEventListener","fetch","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.1d142570.chunk.js","sourcesContent":["import React, { useState } from 'react'\nimport './nav.scss'\nimport { MDBNavbar, MDBNavbarBrand, MDBNavbarNav, MDBNavItem, MDBNavbarToggler, MDBCollapse, MDBIcon } from 'mdbreact'\n\nfunction Nav () {\n  const [isOpen, setIsOpen] = useState(false)\n\n  const toggleCollapse = () => setIsOpen(!isOpen)\n\n  return (\n    <nav>\n      <MDBNavbar color=\"danger-color\" dark expand=\"md\">\n        <MDBNavbarBrand>\n          <strong className=\"white-text\">Image Coordinator</strong>\n        </MDBNavbarBrand>\n        <MDBNavbarToggler onClick={toggleCollapse} />\n        <MDBCollapse id=\"navbarCollapse3\" isOpen={isOpen} navbar>\n          <MDBNavbarNav left>\n            <MDBNavItem>\n              <a\n                className='nav-link'\n                href=\"https://gitlab.com/Semreg/image-coordinator/issues\"\n                target='_blank'\n                rel='noopener noreferrer'\n              >\n                Issues\n              </a>\n            </MDBNavItem>\n            <MDBNavItem>\n              <a\n                className='nav-link'\n                href=\"https://gitlab.com/Semreg/image-coordinator/\"\n                target='_blank'\n                rel='noopener noreferrer'\n              >\n                Source Code\n              </a>\n            </MDBNavItem>\n            <MDBNavItem>\n              <a\n                className='nav-link'\n                href=\"#!\"\n                target='_blank'\n                rel='noopener noreferrer'\n              >\n                <MDBIcon className='language-icon' fas='true' icon=\"language\" />\n              </a>\n            </MDBNavItem>\n          </MDBNavbarNav>\n          <MDBNavbarNav right>\n            <MDBNavItem>\n              <a\n                className='nav-link waves-effect waves-light'\n                href=\"https://gitlab.com/Semreg\"\n                target='_blank'\n                rel='noopener noreferrer'\n              >\n                <MDBIcon fab icon=\"gitlab\" />\n              </a>\n            </MDBNavItem>\n            <MDBNavItem>\n              <a\n                className='nav-link waves-effect waves-light'\n                href=\"https://github.com/Semreg\"\n                target='_blank'\n                rel='noopener noreferrer'\n              >\n                <MDBIcon fab icon=\"github\" />\n              </a>\n            </MDBNavItem>\n            <MDBNavItem>\n              <a\n                className='nav-link waves-effect waves-light'\n                href=\"https://www.linkedin.com/in/vladislav-chabaniuk-792849159\"\n                target='_blank'\n                rel='noopener noreferrer'\n              >\n                <MDBIcon fab icon=\"linkedin\" />\n              </a>\n            </MDBNavItem>\n          </MDBNavbarNav>\n        </MDBCollapse>\n      </MDBNavbar>\n    </nav>\n  )\n}\n\nexport default Nav\n","import React from 'react'\nimport './footer.scss'\n\nconst Footer = () => (\n  <footer>\n  </footer>\n)\n\nexport default Footer\n","import React from 'react'\nimport { element } from 'prop-types'\nimport Nav from './nav/Nav'\nimport Footer from './footer/Footer'\n\nconst Layout = ({ children }) => (\n  <>\n    <Nav />\n    {children}\n    <Footer />\n  </>\n)\n\nLayout.propTypes = {\n  children: element\n}\n\nexport default Layout\n","import React, { useState } from 'react'\nimport { func } from 'prop-types'\n\nconst propTypes = { readURL: func }\n\nfunction UploadInput ({ readURL }) {\n  const [isImageDropping, setIsImageDropping] = useState(false)\n\n  const onDragOver = () => setIsImageDropping(true)\n\n  const onDragLeave = () => setIsImageDropping(false)\n\n  return (\n    <div\n      onDragOver={onDragOver}\n      onDragLeave={onDragLeave}\n      className={`\n        image-upload-wrap\n        ${isImageDropping ? 'image-dropping' : ''}\n      `}\n    >\n      <input\n        id='file-input'\n        className='file-upload-input'\n        type='file'\n        onChange={readURL}\n        accept='image/*'\n      />\n      <div className='drag-text'>\n        <h3>\n          <i className=\"fas fa-file-upload\"></i>\n          <p className='drag-and-drop-text'>Drag and drop an image here or click</p>\n        </h3>\n      </div>\n    </div>\n  )\n}\n\nUploadInput.propTypes = propTypes\n\nexport default UploadInput\n","import React from 'react'\nimport { func, object } from 'prop-types'\n\nconst propTypes = {\n  removeUpload: func,\n  image: object\n}\n\nconst ConfirmUpload = ({ removeUpload, image }) => (\n  <div className='file-upload-content'>\n    <img className='file-upload-image' src={image.source} alt='your content' />\n    <div className='image-title-wrap'>\n      <button\n        type='button'\n        onClick={removeUpload}\n        className='remove-image btn btn-dark'\n      >\n        <span className='capital'><i className=\"fas fa-times\"></i> Remove</span>\n        <br/>\n        <span className='image-title'>{image.title}</span>\n      </button>\n    </div>\n  </div>\n)\n\nConfirmUpload.propTypes = propTypes\n\nexport default ConfirmUpload\n","import React from 'react'\nimport { node } from 'prop-types'\nimport { useSpring, animated } from 'react-spring'\n\nconst propTypes = { children: node }\n\nfunction Animated ({ children }) {\n  const springProps = useSpring({\n    opacity: 1,\n    marginTop: 0,\n    from: {\n      opacity: 0,\n      marginTop: -20\n    }\n  })\n\n  return (\n    <animated.div style={springProps}>\n      {children}\n    </animated.div>\n  )\n}\n\nAnimated.propTypes = propTypes\n\nexport default Animated\n","import React from 'react'\nimport { MDBJumbotron, MDBBtn, MDBContainer, MDBRow, MDBCol } from 'mdbreact'\nimport { object, func } from 'prop-types'\n\nimport UploadInput from './UploadInput'\nimport ConfirmUpload from './ConfirmUpload'\nimport Animated from '../../other/Animated'\n\nconst propTypes = {\n  image: object,\n  setImage: func\n}\n\nfunction UploadForm ({ image, setImage }) {\n  const removeUpload = () => setImage({\n    title: null,\n    source: null,\n    confirmed: image.isConfirmed\n  })\n\n  const readURL = e => {\n    const { files } = e.target\n\n    if (files && files[0]) {\n      const reader = new FileReader()\n\n      reader.onload = e => {\n        const { result } = e.target\n\n        setImage({\n          title: files[0].name,\n          source: result,\n          confirmed: image.isConfirmed\n        })\n      }\n\n      reader.readAsDataURL(files[0])\n    } else {\n      removeUpload()\n    }\n  }\n\n  const onClick = () => setImage({\n    title: image.title,\n    source: image.source,\n    isConfirmed: true\n  })\n\n  return (\n    <Animated>\n      <MDBContainer className='mt-5 text-center form-container'>\n        <MDBRow>\n          <MDBCol>\n            <MDBJumbotron>\n              <h2 className='h1 display-3'>Load Your Image</h2>\n              <p>The image must have the correct extension and resolution.</p>\n              <div className='file-upload'>\n                {!image.source\n                  ? <UploadInput readURL={readURL}/>\n                  : (\n                    <ConfirmUpload\n                      image={image}\n                      removeUpload={removeUpload}\n                    />\n                  )\n                }\n              </div>\n              <p className='lead' style={{ 'marginTop': '20px' }}>\n                <MDBBtn\n                  id='button'\n                  color='primary'\n                  className={`${!image.source ? 'disabled' : ''}`}\n                  onClick={onClick}\n                >\n                  <span className='capital'>\n                    <i className=\"fas fa-chevron-right\"></i> Go next\n                  </span>\n                </MDBBtn>\n              </p>\n            </MDBJumbotron>\n          </MDBCol>\n        </MDBRow>\n      </MDBContainer>\n    </Animated>\n  )\n}\n\nUploadForm.propTypes = propTypes\n\nexport default UploadForm\n","/**\n * TODO: Find another way of getting image size without rendering it\n */\n\nimport React, { useState, useEffect, useRef } from 'react'\nimport { MDBJumbotron, MDBContainer, MDBRow, MDBCol, MDBInput } from 'mdbreact'\nimport { string, object, func, element } from 'prop-types'\nimport Animated from '../../other/Animated'\n\nconst propTypes = {\n  imageSource: string,\n  imageProps: object,\n  setImageProps: func,\n  children: element\n}\n\nfunction PropsForm ({ imageSource, imageProps, setImageProps, children }) {\n  const [doDisplayImage, setDoDisplayImage] = useState(true)\n\n  const loadedImage = useRef(null)\n\n  useEffect(() => {\n    const image = loadedImage.current\n\n    setImageProps({\n      width: image.clientWidth,\n      height: image.clientHeight,\n      selectionShape: imageProps.selectionShape,\n      isConfirmed: imageProps.isConfirmed\n    })\n\n    setDoDisplayImage(false)\n  }, [])\n\n  const onWidthChange = e => setImageProps({\n    width: e.target.value,\n    height: imageProps.height,\n    selectionShape: imageProps.selectionShape,\n    isConfirmed: imageProps.isConfirmed\n  })\n\n  const onHeightChange = e => setImageProps({\n    width: imageProps.width,\n    height: e.target.value,\n    selectionShape: imageProps.selectionShape,\n    isConfirmed: imageProps.isConfirmed\n  })\n\n  const onClick = e => {\n    const { value } = e.target\n\n    if (value) {\n      setImageProps({\n        width: imageProps.width,\n        height: imageProps.height,\n        selectionShape: value,\n        isConfirmed: imageProps.isConfirmed\n      })\n    }\n  }\n\n  return (\n    <Animated>\n      <div style={{ 'visibility': 'hidden ' }}>\n        {doDisplayImage\n          ? <img ref={loadedImage} src={imageSource} alt='loaded'/>\n          : ''\n        }\n      </div>\n      <MDBContainer className='mt-3 form-container text-center'>\n        <div className=\"text-left\">\n          {children}\n        </div>\n        <MDBRow className='mt-3'>\n          <MDBCol>\n            <MDBJumbotron>\n              <h3 className='h1 display-3 text-center'>Specify Properties</h3>\n              <hr/>\n              <h2 className='text-center'>Image Size</h2>\n              <span className='text-muted text-center size-title'>Do not change if you want to save the natural size</span>\n              <div className='content-center'>\n                <form className='form'>\n                  <div className=\"grey-text text-left\">\n                    <MDBInput\n                      label=\"Width (px)\"\n                      icon=\"arrows-alt-h\"\n                      group\n                      type=\"text\"\n                      validate\n                      error=\"wrong\"\n                      success=\"right\"\n                      onChange={onWidthChange}\n                      value={String(imageProps.width)}\n                    />\n                    <MDBInput\n                      label=\"Height (px)\"\n                      icon=\"arrows-alt-v\"\n                      group\n                      type=\"email\"\n                      validate\n                      error=\"wrong\"\n                      success=\"right\"\n                      onChange={onHeightChange}\n                      value={String(imageProps.height)}\n                    />\n                  </div>\n                </form>\n              </div>\n              <h2 className='text-center'>Shape of the Selection Area</h2>\n              <span className='text-muted text-center size-title'>Choose one of three options</span>\n              <div className=\"content-center mt-3 text-muted\">\n                <form>\n                  <div id=\"checkboxes\" className='checkboxes'>\n                    <div className=\"checkboxgroup\">\n                      <label htmlFor=\"my_radio_button_id1\"><i className=\"far fa-square radio-icon\"></i> </label>\n                      <input onClick={onClick} value='1' type=\"radio\" name=\"radio\" id=\"my_radio_button_id1\" disabled/>\n                    </div>\n                    <div className=\"checkboxgroup\">\n                      <label htmlFor=\"my_radio_button_id2\"><i className=\"far fa-circle radio-icon\"></i></label>\n                      <input onClick={onClick} value='2' type=\"radio\" name=\"radio\" id=\"my_radio_button_id2\" disabled/>\n                    </div>\n                    <div className=\"checkboxgroup mb-3\">\n                      <label htmlFor=\"my_radio_button_id3\"><i className=\"fas fa-draw-polygon radio-icon\"></i></label>\n                      <input onClick={onClick} value='3' type=\"radio\" name=\"radio\" id=\"my_radio_button_id3\" defaultChecked/>\n                    </div>\n                  </div>\n                </form>\n              </div>\n            </MDBJumbotron>\n          </MDBCol>\n        </MDBRow>\n      </MDBContainer>\n    </Animated>\n  )\n}\n\nPropsForm.propTypes = propTypes\n\nexport default PropsForm\n","/**\n * TODO: Implement Context API or Redux for managing global state\n * and reduce parent > child > parent data & functions transfer\n */\n\nimport React, { useState, useEffect, useRef } from 'react'\nimport { func, object, array } from 'prop-types'\n\nconst propTypes = {\n  coords: array,\n  image: object,\n  imageProps: object,\n  formContainerProps: object,\n  canvasProps: object,\n  setCanvasProps: func,\n  setCoords: func,\n  setCurrentCoords: func\n}\n\nfunction ImageCanvas ({\n  coords,\n  image,\n  formContainerProps,\n  imageProps,\n  canvasProps,\n  setCanvasProps,\n  setCoords,\n  setCurrentCoords\n}) {\n  const [imageToDraw, setImageToDraw] = useState(null)\n\n  const canvasRef = useRef(null)\n\n  useEffect(() => {\n    if (formContainerProps.width && formContainerProps.height) {\n      if (imageProps.width > formContainerProps.width) {\n        const imageRatio = imageProps.width / imageProps.height\n        const newWidth = formContainerProps.width * 0.9\n\n        setCanvasProps({\n          width: newWidth,\n          height: newWidth / imageRatio\n        })\n      } else {\n        setCanvasProps({\n          width: imageProps.width,\n          height: imageProps.height\n        })\n      }\n    }\n  }, [formContainerProps])\n\n  useEffect(() => {\n    const baseImage = new Image()\n\n    baseImage.src = image.source\n\n    baseImage.width = canvasProps.width\n    baseImage.height = canvasProps.height\n\n    baseImage.onload = () => setImageToDraw(baseImage)\n  }, [canvasProps])\n\n  useEffect(() => {\n    if (imageToDraw) {\n      const canvas = canvasRef.current\n      const ctx = canvas.getContext('2d')\n\n      ctx.clearRect(0, 0, canvas.width, canvas.height)\n\n      drawImage(ctx, imageToDraw, canvasProps.width, canvasProps.height)\n      drawStrokes(ctx, coords)\n      drawPoly(ctx, coords)\n    }\n  }, [coords, imageToDraw])\n\n  // Draw functions\n\n  const drawImage = (ctx, img, width, height) => ctx.drawImage(img, 0, 0, width, height)\n\n  const drawStrokes = (ctx, strokesCoords) => strokesCoords.forEach(item => {\n    ctx.beginPath()\n    ctx.fillStyle = 'tomato'\n    ctx.strokeStyle = 'tomato'\n    ctx.arc(item[0], item[1], 2, 0, 2 * Math.PI)\n    ctx.fill()\n    ctx.stroke()\n  })\n\n  const drawPoly = (ctx, coords) => {\n    if (coords.length > 2) {\n      ctx.fillStyle = 'rgba(148, 110, 110, 0.22)'\n\n      ctx.beginPath()\n      ctx.moveTo(coords[0][0], coords[0][1])\n\n      coords.forEach(element => {\n        ctx.lineTo(element[0], element[1])\n      })\n\n      ctx.closePath()\n      ctx.fill()\n    }\n  }\n\n  const getCoordinates = e => {\n    const rect = e.target.getBoundingClientRect()\n\n    const x = e.clientX - rect.left\n    const y = e.clientY - rect.top\n\n    const xy = [ x, y ]\n\n    setCurrentCoords(xy)\n    setCoords([...coords, xy])\n  }\n\n  return (\n    <>\n      <canvas\n        ref={canvasRef}\n        width={canvasProps.width}\n        height={canvasProps.height}\n        onClick={getCoordinates}\n      />\n    </>\n  )\n}\n\nImageCanvas.propTypes = propTypes\n\nexport default ImageCanvas\n","import React, { useState, useRef, useEffect } from 'react'\nimport { element, object } from 'prop-types'\nimport { MDBBtn, MDBContainer, MDBRow, MDBCol, MDBInput } from 'mdbreact'\nimport ImageCanvas from './ImageCanvas'\nimport Animated from '../../other/Animated'\n\nconst propTypes = {\n  children: element,\n  image: object,\n  imageProps: object\n}\n\nfunction CoordinatePicker ({ children, image, imageProps }) {\n  const [coords, setCoords] = useState([])\n  const [removedCoords, setRemovedCoords] = useState([])\n  const [currentCoords, setCurrentCoords] = useState(null)\n\n  const [canvasProps, setCanvasProps] = useState({\n    width: imageProps.width,\n    height: imageProps.height\n  })\n\n  const [formContainerProps, setformContainerProps] = useState({\n    width: null,\n    height: null\n  })\n\n  const formContainer = useRef(null)\n\n  useEffect(() => {\n    setformContainerProps({\n      width: formContainer.current.clientWidth,\n      height: formContainer.current.clientHeight\n    })\n  }, [])\n\n  useEffect(() => {\n    console.log(getNaturalCoords(coords, canvasProps, imageProps))\n  }, [coords])\n\n  const clearCoords = () => {\n    setCoords([])\n    setRemovedCoords([])\n    setCurrentCoords(null)\n  }\n\n  const undo = () => {\n    if (coords.length >= 1) {\n      setCoords(coords.slice(0, -1))\n      setCurrentCoords(coords[coords.length - 2])\n      setRemovedCoords([...removedCoords, coords.pop()])\n    }\n  }\n\n  const redo = () => {\n    if (removedCoords.length >= 1) {\n      const currentRemovedCoords = removedCoords.slice(0, -1)\n      const lastRemoved = removedCoords.pop()\n\n      setRemovedCoords(currentRemovedCoords)\n      setCoords([...coords, lastRemoved])\n      setCurrentCoords(coords[coords.length - 2])\n    }\n  }\n\n  const getNaturalCoords = (xy, currentProps, naturalProps) => (\n    [\n      xy[0] * (naturalProps.width / currentProps.width),\n      xy[1] * (naturalProps.height / currentProps.height)\n    ]\n  )\n\n  return (\n    <Animated>\n      <MDBContainer className='mt-3 form-container text-center'>\n        <div className=\"text-left\">\n          {children}\n        </div>\n        <MDBRow className='mt-3'>\n          <MDBCol>\n            <div className='jumbotron' ref={formContainer}>\n              {/* TODO: Implement Context API or Redux for managing global state\n           and reduce parent > child > parent data & functions transfer */}\n              <ImageCanvas\n              // Coords\n                coords={coords}\n                removedCoords={removedCoords}\n                currentCoords={currentCoords}\n                // Props objects\n                image={image}\n                canvasProps={canvasProps}\n                imageProps={imageProps}\n                formContainerProps={formContainerProps}\n                // Functions\n                setCanvasProps={setCanvasProps}\n                setRemovedCoords={setRemovedCoords}\n                setCoords={setCoords}\n                setCurrentCoords={setCurrentCoords}\n              />\n              <h2 className='text-center mt-3'>Coords</h2>\n              <span className='text-muted text-center size-title'>Automatically calculated for specified resolution</span>\n              <div className='content-center-auto'>\n                <div className=\"grey-text text-left\">\n                  <MDBInput\n                    label=\"Last Coords\"\n                    icon=\"map-marker-alt\"\n                    group\n                    type=\"text\"\n                    validate\n                    error=\"wrong\"\n                    success=\"right\"\n                    value={`${currentCoords ? `${getNaturalCoords(currentCoords, canvasProps, imageProps)}` : ''}`}\n                  />\n                  <MDBInput\n                    label=\"All Coords\"\n                    icon=\"map\"\n                    group\n                    type=\"text\"\n                    validate\n                    error=\"wrong\"\n                    success=\"right\"\n                    className='text'\n                    value={`${coords.length > 0 ? `${coords.map(xy => getNaturalCoords(xy, canvasProps, imageProps)).join(' ')}` : ''}`}\n                  />\n                </div>\n                <div className=\"control-buttons\">\n                  <MDBBtn\n                    onClick={undo}\n                    className={`${coords.length < 1 ? 'disabled' : ''}`}\n                  >\n                    <i className=\"fas fa-undo\"></i> REDO\n                  </MDBBtn>\n                  <MDBBtn\n                    onClick={redo}\n                    className={`${removedCoords.length < 1 ? 'disabled' : ''}`}\n                  >\n                    <i className=\"fas fa-redo\"></i> UNDO\n                  </MDBBtn>\n                  <MDBBtn\n                    color='danger'\n                    onClick={clearCoords}\n                  >\n                    <i className=\"fas fa-times\"></i> CLEAR\n                  </MDBBtn>\n                </div>\n              </div>\n            </div>\n          </MDBCol>\n        </MDBRow>\n      </MDBContainer>\n    </Animated>\n  )\n}\n\nCoordinatePicker.propTypes = propTypes\n\nexport default CoordinatePicker\n","import React, { useState } from 'react'\nimport './coordinator-form.scss'\nimport { object, func } from 'prop-types'\nimport { MDBBtn } from 'mdbreact'\n\nimport PropsForm from './PropsForm'\nimport CoordinatePicker from './CoordinatePicker'\n\nconst propTypes = {\n  image: object,\n  setImage: func\n}\n\nfunction CoordinatorForm ({ image, setImage }) {\n  const [imageProps, setImageProps] = useState({\n    width: undefined,\n    height: undefined,\n    selectionShape: 3,\n    isConfirmed: false\n  })\n\n  const onCancelClick = () => setImage({\n    title: image.title,\n    source: image.source,\n    isConfirmed: false\n  })\n\n  const onNextClick = () => setImageProps({\n    width: imageProps.width,\n    height: imageProps.height,\n    selectionShape: imageProps.selectionShape,\n    isConfirmed: true\n  })\n\n  const onEditClick = () => setImageProps({\n    width: imageProps.width,\n    height: imageProps.height,\n    selectionShape: imageProps.selectionShape,\n    isConfirmed: false\n  })\n\n  return (\n    <>\n      {!imageProps.isConfirmed\n        ? (\n          <PropsForm\n            imageSource={image.source}\n            imageProps={imageProps}\n            setImageProps={setImageProps}\n          >\n            <div className=\"buttons\">\n              <div className=\"button button_cancel\">\n                <MDBBtn color='dark' onClick={onCancelClick}>\n                  <i className=\"fas fa-times\"></i> CANCEL\n                </MDBBtn>\n              </div>\n              <div className=\"button button_edit\">\n                <MDBBtn color='primary' onClick={onNextClick}>\n                  <i className=\"fas fa-chevron-right\"></i> NEXT\n                </MDBBtn>\n              </div>\n            </div>\n          </PropsForm>\n        )\n        : (\n          <CoordinatePicker\n            imageProps={imageProps}\n            image={image}\n          >\n            <div className=\"buttons\">\n              <div className=\"button button_cancel\">\n                <MDBBtn color='dark' onClick={onCancelClick}>\n                  <i className=\"fas fa-times\"></i> CANCEL\n                </MDBBtn>\n              </div>\n              <div className=\"button button_edit\">\n                <MDBBtn onClick={onEditClick}>\n                  <i className=\"fas fa-pen\"></i> EDIT\n                </MDBBtn>\n              </div>\n            </div>\n          </CoordinatePicker>\n        )\n      }\n    </>\n  )\n}\n\nCoordinatorForm.propTypes = propTypes\n\nexport default CoordinatorForm\n","import React, { useState } from 'react'\nimport './main.scss'\n\nimport UploadForm from './upload-form/UploadForm'\nimport CoordinatorForm from './сoordinator-form/CoordinatorForm'\n\nfunction Main () {\n  const [image, setImage] = useState({\n    title: null,\n    source: null,\n    isConfirmed: false\n  })\n\n  return (\n    <>\n      {!image.isConfirmed\n        ? <UploadForm image={image} setImage={setImage}/>\n        : <CoordinatorForm image={image} setImage={setImage}/>\n      }\n    </>\n  )\n}\n\nexport default Main\n","import { hot } from 'react-hot-loader/root'\nimport React from 'react'\nimport Layout from './layout/Layout'\nimport { BrowserRouter as Router } from 'react-router-dom'\nimport Main from './main/Main'\n\nfunction App (props) {\n  return (\n    <Router>\n      <Layout>\n        <Main />\n      </Layout>\n    </Router>\n  )\n}\n\nexport default hot(App)\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n)\n\nexport function register (config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          )\n        })\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config)\n      }\n    })\n  }\n}\n\nfunction registerValidSW (swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        if (installingWorker == null) {\n          return\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              )\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration)\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.')\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration)\n              }\n            }\n          }\n        }\n      }\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error)\n    })\n}\n\nfunction checkValidServiceWorker (swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type')\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config)\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      )\n    })\n}\n\nexport function unregister () {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister()\n    })\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\n\n// MDB\nimport '@fortawesome/fontawesome-free/css/all.min.css'\nimport 'bootstrap-css-only/css/bootstrap.min.css'\nimport 'mdbreact/dist/css/mdb.css'\n\nimport App from './components/App'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(<App />, document.querySelector('#root'))\n\nserviceWorker.register()\n"],"sourceRoot":""}